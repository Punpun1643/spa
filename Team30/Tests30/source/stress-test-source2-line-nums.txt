while, if, while, else, if, while, while, if, else, while, else, 
else, else, while, while, while, if, while, if, if, else, 
if, while, while, if, x2 while

381 Lines 

procedure DeepNesting {

1 while (a <= 0) {
2	b = 1 + 9 / c / 3 / 0;
3  f = 0 - 9 + 0 + 0;

4  if ((!(0 > u)) && (!(h >= y))) then { 
5		r = a - (c * 0) % 41 * t / s * a;
6    a = 0;                               
7    p = w + (l - 46 - 19 + 0) - 9 * 2 + a;

8		while ((a != t) || (10 % 3 == (p))) {
9			read r;
10			t = u / 2;
11      b = (t * q % 1 + 0) % c / d / y * i;
12      read y;

13			if ((k == k) && (k != k)) then {
14				call p1;    
15				print q;
			} else {
16				call p2;
17				if ((!(x + y <= z)) && (x == w)) then {
18					while ((d != 55) || ((!(m * m % n % v < 0)) && (p != d))) {
						
19            u = i + o + e + a;
            
20           while (!(!(!(e == 0)))) {
21							if (o >= d * (0 + 6) + (0 * n) - l + ((0) + (c / k)) + z + m) then {
								
22                read n;
23                call p8;

24                if ((v <= 0 + u) || ((0 == c % 40 * n + o) && (p < 1 / i * k + k / 0 * (41105 * 9 * 632 - 1 % w) * (0 + 0 / y - i / k % 347847446 % 0 * g % ((0)) % m % p + ((b / 666 % e / l * ((0))) / 8 / 0) - z) / 0 - 60 % 0 / ((0 / 0) % 4 / (z - 3 / f * 6 - 0 + 0 / 0 % x / 0 + o % 92 - 0 - 0 * (v * 507 / i + 2 / 0 % 3 / 0) / w - s + 0) % 0 - 0 / 8 % 0 - c * 0 % 0 / 0 / 7 % (0 / (0 + (0 * s) - x % 2 - (d + q - 0 * 249)) * t) + 4)))) then {
25									j = k / 19 % o / 361 + 0 - q - u;
26									print w;
27    							l = ((81 * 5 % 855 % s + (0 % (m * u * (0 + 2 + (j))) / 0) % h)) + x * 0;
28    							w = t - h / x;
								} else {
29									while (s == q){
30										if (x >= 1+(1-(1*(1/(1%1)))) ) then {
31											h = w + 8 / p;
										} else {
32											r = (o - 0);
33                    	call p2;
34											if (!( (!(0 <= 0)) && (0 > 0) )) then {
35												q = (84 + r * 0 - 0 + 4) * z;
36                     		e = 0 * m + (1) % (u / 0 * 6 % n * (k / (e) / e % 0 * o * y)) * 0 / (w);
37                     		call p3;
                     
											} else {
38												if (0 - (2 / n) % (0 * b * 7) - 53 > 35) then {
39													print w;
40                          w = 14 - (d) + (j % g - k % t / 8);
41                          call p3;
												} else {
42													while (9 != 11) {

43                            x = (1 + 9) * (7 + 6);

44														while (!(u <= h) || ((0 <= m) || (5 == 0)) ) {
45                              print p;
46                              read r;

47															while ((o <= o) && (s > 7)) {
48                                call p5;

49																if ((((((t > 981) && (i == 0)) || (q == (0) % c)) && (!(n == ((7) + k) % r - a * a))) || (5 + 24 % 0 != 0)) && (w < h)) then {
																	
50                                  a = a + a - a / a * a % a;
                                  
51                                  while (u % a - r < 0 % 0 % 4) {
52																		if (2 > (l % l - 2)) then {
																			
53                                      call p8;

54                                      if (((0 != x) || (a != t)) || ((0 % (p) / c - 0 != p) && (29 != e))) then {
55																				y = s + a / r * p % w * 2 % k - m / 39397885;
56    																		s = x;
57    																		h = e;
58    																		d = 9;
																			} else {
59																				if ((64 % b % (1) / r == 502) || (a < 0)) then {
60																					while (0 != 3 - 0 / 8) {
61																						 b = 3 * a;
62                     												call p3;
63                     												call p1;
64                     												r = 4 % 0 / m * r / g - t * ((((0)) - a % s + 8 + q) + 0);
																					} 
																					
65																					while (!(j != 420)) {
66																						o = 12;
67                         										read y;
68                         										call p2;
69                         										v = ((w % g) + 0 / b * 4 - (2 % x % 4)) * 8;
70                         										z = 0 / ((0) + 4 % k / (i + e));
71                         										read b;
72                         										j = 0;
																					}
																				} else {
73																					print i;
74																					e = 0 + ((k - a) / n * r);

75    																			h = 9 / v % q % d - (l + (h * (a / (x * x) - 4 * 8 % f * 0 + 3 + e) - k * 5) / l * c - z / f / 2 * w * 0);
76        																	call p4;
																				}
77																				s= (z * 0) * (v + (888 + 0 - 0 * 0) + 0 - p * q % (z) % 999) / f;
																			}
																		} else {
78																			e = c;
79    																	print i;
80    																	r = ((s / u) - (m % ((d / 73794 * (q / x)) / d) - 8593 * (8) * t + (u)) * 1 % f) + (0 / 61 + (0 % o % (f * (p * d) / (0 % x % 7913 / k + 0 + u * l + ((14) / 0) - 7 * 0 + v / q / 1 % o) % a % 8 * 0 - 8 * u % 3 * 9855 + (0 * ((0)) / m * z * (d) % 9 / 0 % y % 8 % u * 4) - b % e) % (0 % 0 % c) % b));
81    																	g = 1 / 0;
																		}
82																		s = 86 % j + 0;
83                                    g = 0 % n + k * y - (0);
																	}
																} else {
84																	f = 0 * 0 - 0;
85                                  u = g - c;
86                                  u = 0 + 0 * 0 - c * 7799 - 5;
																}
87																read m;
															}

88                              v = v - v;
89                              print v;
90                              print v;
91                              read v;
92                              l = 1;
														} 

													} 
93													print i;
94													v = 0 / 0 / 0;
95    											h = (0 * r + 31 / c);
96    											n = k / 19 % o / 361 + 0 - q - u;

97													read x;
												}
98												call p3;
99												print s;
											}

										}
100										print m;

									} 
101									call p1;
102									g = c;
103                  u = x;
104                  read m;
105                  h = 0;
106                  print s;
107                  print q;
108                  z = 0;
								}

							} else {
109								o = 9;
110            		p = 0 % 0 * e * m - 0;
111            		call p6;
							}
112              n = k / 19 % o / 361 + 0 - q - 1;
113              call p4;
114              l = ((81 * 5 % 855 % s + (0 % (m * f * (0 + 2 + (j))) / 0) % h)) + x * 0;
						}
115            read c;
116            read d;
					}
117          m = y + (777 / 4) / 17 % 0 % k;
				} else {
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;
					a =  (a +d - c) / e % e + (b + c - d) * a / f;

				}
218				call p5;
219        h = e / 3 * 2 + ( d - 20);
			}

220			j = d / 256;
221			read b;
222      y = (h) - 5 / (v * (0 % 0 * g % l * (b / (91) % m)) / p % (3 * 63 % ((t)) + (7 * (0 / 116 / q / c + 0 * (0 / e / r * 9 % y)))) * p) / (t - z % v) / 6 / 0 % (o);
223     i = h;
224      call p7;
		}

225    f = 34 * n + 6 / e;
226    a = (b - 0) - 419 - 0 / r / q % x - l - u / 635 % 43;
227    g = ((262) + (6 / 0 - 74 - y) - (0 - w)) % 0 % i;

228    a = h;
229    call p3;

  } else {
230		q = 333;
231    q = j + 9;
232		print q;
233		read q;

	}
234  e = j;
235  print m;
236  x = p + 0;
            
}

237 print z;
238 p = 0;

}


procedure p1 {
239    a = b;
}

procedure p2 {
240    print l;
241    v = p / 65 % (x) % (84) - e;
242    read a;
}

procedure p3 {
243    call p1;
244    call p2;
}

procedure p4 {
245	if (0 == 0) then {
246    q = l;
247    d = c - 0 % (g % 987 / b * k) + (j + a % 374);
	} else {
248    print q;
	}
}

procedure p5 {
249  while (o != z) {  
250    while ((6 >= d) || (!(m <= d))) {
251      read c;
      }
252    call p4;
  }
}

procedure p6 {
253    a = 5;
254    b = 1;
255    c = 7;

256    while (b < 8) {
257      if (c <= 10) then {
258        a = b - 1;
259        b = b + 2;
      } else {
260        c = a - b + 1;
261        while (d == 4) {
262          d = d * 2;
263          read a;
264          while (b == 0) {
265            print b;
          }
        }
      }

266      d = b + c;

267      while (c == 1) {
268        print b;
269        c = c + 1;
      }
    }

270    if (c > 5) then {
271        read c;
    } else {
272        if (e == 1) then {
273           c = c + 1;
274           b = c + 2; 
        } else {
275           c = c + 1;
        }
    }
    
276    print b;

}

procedure p7 {
  
277  a = a - 1;
278  read a;

279  if (c * 3 == d % 2) then {
280    c = 7 + a + b * d;
281    a = b; 
282    while (f * 2 < 5) {
283      print f;
284      read d;
285      b = a;
286      if (!(c < a)) then {
287        d = c + a;
288        a = d;
289        while (d >= 2 / a *c) {
290          print x;
291          while (e == b) {
292            while (f == 0) {
293              d = a;
294              if ((g > f) && (b != g)) then {
295                a = 48 % g + x % 92 + d;
296                read x;
297                c = 0 % g / 3 - 0 * 11 % b;
              } else {
298                call p2;
299                e = c + c + 1;
300                a = b;
              }
301              a = c % a - x / b;
302              b = a;
            }
303            read e;
          }
304          a = b;
        }
305        e = e + 1;
306        print x;
      } else {

307        while (1 == g) {
308          f = b + d - a;
309          c = x - d;
        }
      }
310      call p2;
311      b = a;
    }
  } else {
312    if (!(6 > e) || (f >= 0)) then {
313      a = b;
314      if (6 > f) then {
315        c = x + a + d + b;
      } else {
316        e = f;
317        b = a;
      }
    } else {
318      while ((1 > 1) && (d == a / 0) ) {
319        b = a;
      }
    }
320    print a;
  } 


}

procedure p8 {

321      print v0;
322      print v1;
323      if (v2 > v5) then {
324          print v8;
      }  else {
325          v4 = v5 % 1 + 5 / 3 * v9 - (v7 / v1);
326          print v7;
327          print v6;
328          print v9;
329          v1 = v2 - 1;

330          read v2;
331          while (v2 > 0) {
332              v3 = v4 - 4;
333              v4 = v4 - 1;
334             v5 = v8;
          } 
335          v6 = v3;
336          read v9;

337          if (v1 > v29) then {
338              v1 = v3 - 20;
          } else {
339              v5 = v3 + v2;
340              v6 = 1;
341              v7 = v4 + v3;
          }

342          if (v3 > 4) then {
343              v1 = v2 - v3;
344              print v4;
345              print v3;
346              print v6;
347              read v7;
348              v7 = 1;
          } else {
349              print v8;
350              print v9;
351              v0 = 2 * v8;
          }
352          while (v6 == v1) {
353              v6 = v7 + 7;
354              v1 = v1;
355              print v2;

356              if (v1 == 1) then {
357                  read v3;
              } else {
358                  read v1;
              }
          }
      }

359      print v9;
360      read v4;

361      a = b - 1;
362      b = c + d;
363      b = 10 / 3;
364      print c;

365      while (a < b + 1) {
366          read d;
367          d = b - c;
368          d = c - d;
369          while (d > 0 + e) {
370            d = d - 1;
371            read d;
372            read e;
373            print f;
374            if (f < 4) then {
375                f = f + 4 * 10 - e;
376               e = 0 + f;
            } else {
377                e = f / 40;
378                g = h - 1;
379                read f;
            }
          }
      }

380      f = f - 2;
381      h = d / 20 * 3 - ( e - 2);




}